<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator><link href="/feed.xml" rel="self" type="application/atom+xml" /><link href="/" rel="alternate" type="text/html" /><updated>2022-02-13T17:01:55+08:00</updated><id>/feed.xml</id><title type="html">Your Site Title</title><subtitle>Your Site Description
</subtitle><author><name>Your Name</name></author><entry><title type="html">放烟花1</title><link href="/2022/01/31/%E6%94%BE%E7%83%9F%E8%8A%B11.html" rel="alternate" type="text/html" title="放烟花1" /><published>2022-01-31T00:00:00+08:00</published><updated>2022-01-31T00:00:00+08:00</updated><id>/2022/01/31/%E6%94%BE%E7%83%9F%E8%8A%B11</id><content type="html" xml:base="/2022/01/31/%E6%94%BE%E7%83%9F%E8%8A%B11.html"><![CDATA[<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
        "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=UTF-8">
    <style>
        body {
            margin: 0;
            padding: 0;
            overflow: hidden;
        }

        .city {
            width: 100%;
            position: fixed;
            bottom: 0px;
            z-index: 100;
        }

        .city img {
            width: 100%;
        }
    </style>
    <title>2022虎年快乐</title>
</head>
<body onselectstart="return false">
<canvas id='cas' style="background-color:rgba(0,5,24,1)">浏览器不支持canvas</canvas>
<div class="city"><img src="/assets/images/city.png" alt=""/></div>
<img src="/assets/images/moon.png" alt="" id="moon" style="visibility: hidden;"/>
<div style="display:none">
    <div class="shape">虎年大吉</div>
    <div class="shape">虎虎生威</div>
    <div class="shape">2022新年快乐</div>
    <div class="shape">2022新年快乐</div>
    <div class="shape">2022新年快乐</div>
    <div class="shape">万事如意</div>
    <div class="shape">吉星高照</div>
    <div class="shape">富贵平安</div>
    <div class="shape">2022新年快乐</div>
    <div class="shape">2022新年快乐</div>
    <div class="shape">2022新年快乐</div>
</div>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/boom.mp3" preload="auto"></audio>
<audio src="/assets/images/shotfire.mp3" preload="auto"></audio>
<audio src="/assets/images/shotfire.mp3" preload="auto"></audio>
<audio src="/assets/images/shotfire.mp3" preload="auto"></audio>
<script>
    var canvas = document.getElementById("cas");
    var ocas = document.createElement("canvas");
    var octx = ocas.getContext("2d");
    var ctx = canvas.getContext("2d");
    ocas.width = canvas.width = window.innerWidth;
    ocas.height = canvas.height = window.innerHeight;
    var bigbooms = [];

    window.onload = function () {
        initAnimate()
    }

    function initAnimate() {
        drawBg();

        lastTime = new Date();
        animate();
    }

    var lastTime;

    function animate() {
        ctx.save();
        ctx.globalCompositeOperation = 'destination-out';
        ctx.globalAlpha = 0.1;
        ctx.fillRect(0, 0, canvas.width, canvas.height);
        ctx.restore();

        var newTime = new Date();
        if (newTime - lastTime > 200 + (window.innerHeight - 767) / 2) {
            var random = Math.random() * 100 > 2;
            var x = getRandom(canvas.width / 5, canvas.width * 4 / 5);
            var y = getRandom(50, 200);
            if (random) {
                var bigboom = new Boom(getRandom(canvas.width / 3, canvas.width * 2 / 3), 2, "#FFF", {x: x, y: y});
                bigbooms.push(bigboom)
            } else {
                var bigboom = new Boom(getRandom(canvas.width / 3, canvas.width * 2 / 3), 2, "#FFF", {
                    x: canvas.width / 2,
                    y: 200
                }, document.querySelectorAll(".shape")[parseInt(getRandom(0, document.querySelectorAll(".shape").length))]);
                bigbooms.push(bigboom)
            }
            lastTime = newTime;
        }

        stars.foreach(function () {
            this.paint();
        })

        drawMoon();

        bigbooms.foreach(function (index) {
            var that = this;
            if (!this.dead) {
                this._move();
                this._drawLight();
            } else {
                this.booms.foreach(function (index) {
                    if (!this.dead) {
                        this.moveTo(index);
                    } else if (index === that.booms.length - 1) {
                        bigbooms.splice(bigbooms.indexOf(that), 1);
                    }
                })
            }
        });

        raf(animate);
    }

    function drawMoon() {
        var moon = document.getElementById("moon");
        var centerX = canvas.width - 200, centerY = 100, width = 80;
        if (moon.complete) {
            ctx.drawImage(moon, centerX, centerY, width, width)
        } else {
            moon.onload = function () {
                ctx.drawImage(moon, centerX, centerY, width, width)
            }
        }
        var index = 0;
        for (var i = 0; i < 10; i++) {
            ctx.save();
            ctx.beginPath();
            ctx.arc(centerX + width / 2, centerY + width / 2, width / 2 + index, 0, 2 * Math.PI);
            ctx.fillStyle = "rgba(240,219,120,0.005)";
            index += 2;
            ctx.fill();
            ctx.restore();
        }

    }

    Array.prototype.foreach = function (callback) {
        for (var i = 0; i < this.length; i++) {
            if (this[i] !== null) callback.apply(this[i], [i])
        }
    }

    var raf = window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || window.oRequestAnimationFrame || window.msRequestAnimationFrame || function (callback) {
        window.setTimeout(callback, 1000 / 10);
    };

    canvas.onclick = function () {
        var x = event.clientX;
        var y = event.clientY;
        var bigboom = new Boom(getRandom(canvas.width / 3, canvas.width * 2 / 3), 2, "#FFF", {x: x, y: y});
        bigbooms.push(bigboom)
    }

    var Boom = function (x, r, c, boomArea, shape) {
        this.booms = [];
        this.x = x;
        this.y = (canvas.height + r);
        this.r = r;
        this.c = c;
        this.shape = shape || false;
        this.boomArea = boomArea;
        this.theta = 0;
        this.dead = false;
        this.ba = parseInt(getRandom(80, 200));

        var audio = document.getElementsByTagName("audio");
        for (var i = 0; i < audio.length; i++) {
            if (audio[i].src.indexOf("shotfire") >= 0 && (audio[i].paused || audio[i].ended)) {
                audio[i].play();
                break;
            }
        }
    }
    Boom.prototype = {
        _paint: function () {
            ctx.save();
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);
            ctx.fillStyle = this.c;
            ctx.fill();
            ctx.restore();
        },
        _move: function () {
            var dx = this.boomArea.x - this.x, dy = this.boomArea.y - this.y;
            this.x = this.x + dx * 0.01;
            this.y = this.y + dy * 0.01;

            if (Math.abs(dx) <= this.ba && Math.abs(dy) <= this.ba) {
                if (this.shape) {
                    this._shapBoom();
                } else this._boom();
                this.dead = true;
            } else {
                this._paint();
            }
        },
        _drawLight: function () {
            ctx.save();
            ctx.fillStyle = "rgba(255,228,150,0.3)";
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.r + 3 * Math.random() + 1, 0, 2 * Math.PI);
            ctx.fill();
            ctx.restore();
        },
        _boom: function () {
            var fragNum = getRandom(100, 300);
            var style = getRandom(0, 10) >= 5 ? 1 : 2;
            var color;
            if (style === 1) {
                color = {
                    a: parseInt(getRandom(128, 255)),
                    b: parseInt(getRandom(128, 255)),
                    c: parseInt(getRandom(128, 255))
                }
            }

            var fanwei = fragNum;
            var audio = document.getElementsByTagName("audio");
            for (var i = 0; i < audio.length; i++) {
                if (audio[i].src.indexOf("boom") >= 0 && (audio[i].paused || audio[i].ended)) {
                    audio[i].play();
                    break;
                }
            }
            for (var i = 0; i < fragNum; i++) {
                if (style === 2) {
                    color = {
                        a: parseInt(getRandom(128, 255)),
                        b: parseInt(getRandom(128, 255)),
                        c: parseInt(getRandom(128, 255))
                    }
                }
                var a = getRandom(-Math.PI, Math.PI);
                var x = getRandom(0, fanwei) * Math.cos(a) + this.x;
                var y = getRandom(0, fanwei) * Math.sin(a) + this.y;
                var radius = getRandom(0, 2)
                var frag = new Frag(this.x, this.y, radius, color, x, y);
                this.booms.push(frag);
            }
        },
        _shapBoom: function () {
            var that = this;
            putValue(ocas, octx, this.shape, 5, function (dots) {
                var dx = canvas.width / 2 - that.x;
                var dy = canvas.height / 2 - that.y;
                for (var i = 0; i < dots.length; i++) {
                    color = {a: dots[i].a, b: dots[i].b, c: dots[i].c}
                    var x = dots[i].x;
                    var y = dots[i].y;
                    var radius = 1;
                    var frag = new Frag(that.x, that.y, radius, color, x - dx, y - dy);
                    that.booms.push(frag);
                }
            })
        }
    }

    function putValue(canvas, context, ele, dr, callback) {
        context.clearRect(0, 0, canvas.width, canvas.height);
        var img = new Image();
        if (ele.innerHTML.indexOf("img") >= 0) {
            img.src = ele.getElementsByTagName("img")[0].src;
            imgload(img, function () {
                context.drawImage(img, canvas.width / 2 - img.width / 2, canvas.height / 2 - img.width / 2);
                dots = getimgData(canvas, context, dr);
                callback(dots);
            })
        } else {
            var text = ele.innerHTML;
            context.save();
            var fontSize = 160;
            context.font = fontSize + "px 宋体 bold";
            context.textAlign = "center";
            context.textBaseline = "middle";
            context.fillStyle = "rgba(" + parseInt(getRandom(128, 255)) + "," + parseInt(getRandom(128, 255)) + "," + parseInt(getRandom(128, 255)) + " , 1)";
            context.fillText(text, canvas.width / 2, canvas.height / 2);
            context.restore();
            dots = getimgData(canvas, context, dr);
            callback(dots);
        }
    }

    function imgload(img, callback) {
        if (img.complete) {
            callback.call(img);
        } else {
            img.onload = function () {
                callback.call(this);
            }
        }
    }

    function getimgData(canvas, context, dr) {
        var imgData = context.getImageData(0, 0, canvas.width, canvas.height);
        context.clearRect(0, 0, canvas.width, canvas.height);
        var dots = [];
        for (var x = 0; x < imgData.width; x += dr) {
            for (var y = 0; y < imgData.height; y += dr) {
                var i = (y * imgData.width + x) * 4;
                if (imgData.data[i + 3] > 128) {
                    var dot = {x: x, y: y, a: imgData.data[i], b: imgData.data[i + 1], c: imgData.data[i + 2]};
                    dots.push(dot);
                }
            }
        }
        return dots;
    }

    function getRandom(a, b) {
        return Math.random() * (b - a) + a;
    }


    var maxRadius = 1, stars = [];

    function drawBg() {
        for (var i = 0; i < 100; i++) {
            var r = Math.random() * maxRadius;
            var x = Math.random() * canvas.width;
            var y = Math.random() * 2 * canvas.height - canvas.height;
            var star = new Star(x, y, r);
            stars.push(star);
            star.paint()
        }

    }

    var Star = function (x, y, r) {
        this.x = x;
        this.y = y;
        this.r = r;
    }
    Star.prototype = {
        paint: function () {
            ctx.save();
            ctx.beginPath();
            ctx.arc(this.x, this.y, this.r, 0, 2 * Math.PI);
            ctx.fillStyle = "rgba(255,255,255," + this.r + ")";
            ctx.fill();
            ctx.restore();
        }
    }

    var focallength = 250;
    var Frag = function (centerX, centerY, radius, color, tx, ty) {
        this.tx = tx;
        this.ty = ty;
        this.x = centerX;
        this.y = centerY;
        this.dead = false;
        this.centerX = centerX;
        this.centerY = centerY;
        this.radius = radius;
        this.color = color;
    }

    Frag.prototype = {
        paint: function () {
            // ctx.beginPath();
            // ctx.arc(this.x , this.y , this.radius , 0 , 2*Math.PI);
            ctx.fillStyle = "rgba(" + this.color.a + "," + this.color.b + "," + this.color.c + ",1)";
            ctx.fillRect(this.x - this.radius, this.y - this.radius, this.radius * 2, this.radius * 2)
        },
        moveTo: function (index) {
            this.ty = this.ty + 0.3;
            var dx = this.tx - this.x, dy = this.ty - this.y;
            this.x = Math.abs(dx) < 0.1 ? this.tx : (this.x + dx * 0.1);
            this.y = Math.abs(dy) < 0.1 ? this.ty : (this.y + dy * 0.1);
            if (dx === 0 && Math.abs(dy) <= 80) {
                this.dead = true;
            }
            this.paint();
        }
    }

</script>
</body>
</html>]]></content><author><name>Your Name</name></author><summary type="html"><![CDATA[2022虎年快乐 浏览器不支持canvas 虎年大吉 虎虎生威 2022新年快乐 2022新年快乐 2022新年快乐 万事如意 吉星高照 富贵平安 2022新年快乐 2022新年快乐 2022新年快乐]]></summary></entry><entry><title type="html">给jekyll网页设置代码高亮</title><link href="/2022/01/05/%E7%BB%99Jekyll%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE.html" rel="alternate" type="text/html" title="给jekyll网页设置代码高亮" /><published>2022-01-05T00:00:00+08:00</published><updated>2022-01-05T00:00:00+08:00</updated><id>/2022/01/05/%E7%BB%99Jekyll%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE</id><content type="html" xml:base="/2022/01/05/%E7%BB%99Jekyll%E7%BD%91%E9%A1%B5%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE.html"><![CDATA[<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">def</span> <span class="nf">Uiybivr</span><span class="p">():</span>
    <span class="n">vornvr</span><span class="p">()</span>
</code></pre></div></div>]]></content><author><name>zorchp</name></author><summary type="html"><![CDATA[def Uiybivr(): vornvr()]]></summary></entry><entry><title type="html">放烟花</title><link href="/2022/01/01/%E6%94%BE%E7%83%9F%E8%8A%B1.html" rel="alternate" type="text/html" title="放烟花" /><published>2022-01-01T00:00:00+08:00</published><updated>2022-01-01T00:00:00+08:00</updated><id>/2022/01/01/%E6%94%BE%E7%83%9F%E8%8A%B1</id><content type="html" xml:base="/2022/01/01/%E6%94%BE%E7%83%9F%E8%8A%B1.html"><![CDATA[<!doctype html>
<html>
<head>
<meta charset="utf-8">

<style>
html,body{
	margin:0px;
	width:100%;
	height:100%;
	overflow:hidden;
	background:#000;
}

#canvas{
	width:100%;
	height:100%;
}
</style>
</head>
<body>
<canvas id="canvas"></canvas><script>
function initVars(){
	pi=Math.PI;
	ctx=canvas.getContext("2d");
	canvas.width=canvas.clientWidth;
	canvas.height=canvas.clientHeight;
	cx=canvas.width/2;
	cy=canvas.height/2;
	playerZ=-25;
	playerX=playerY=playerVX=playerVY=playerVZ=pitch=yaw=pitchV=yawV=0;
	scale=600;
	seedTimer=0;seedInterval=5,seedLife=100;gravity=.02;
	seeds=new Array();
	sparkPics=new Array();
	s="https://cantelope.org/NYE/";
	for(i=1;i<=10;++i){
		sparkPic=new Image();
		sparkPic.src=s+"spark"+i+".png";
		sparkPics.push(sparkPic);
	}
	sparks=new Array();
	pow1=new Audio(s+"pow1.ogg");
	pow2=new Audio(s+"pow2.ogg");
	pow3=new Audio(s+"pow3.ogg");
	pow4=new Audio(s+"pow4.ogg");
	frames = 0;
}

function rasterizePoint(x,y,z){ var p,d; x-=playerX; y-=playerY; z-=playerZ; p=Math.atan2(x,z); d=Math.sqrt(x*x+z*z);
x=Math.sin(p-yaw)*d; z=Math.cos(p-yaw)*d; p=Math.atan2(y,z); d=Math.sqrt(y*y+z*z); y=Math.sin(p-pitch)*d; z=Math.cos(
p-pitch)*d; var rx1=-1000,ry1=1,rx2=1000,ry2=1,rx3=0,ry3=0,rx4=x,ry4=z,uc=(ry4-ry3)*(rx2-rx1)-(rx4-rx3)*(ry2-ry1); if(!
uc) return {x:0,y:0,d:-1}; var ua=((rx4-rx3)*(ry1-ry3)-(ry4-ry3)*(rx1-rx3))/uc; var ub=((rx2-rx1)*(ry1-ry3)-(ry2-ry1)*(
rx1-rx3))/uc; if(!z)z=.000000001; if(ua>0&&ua<1&&ub>0&&ub<1){ return { x:cx+(rx1+ua*(rx2-rx1))*scale, y:cy+y/z*scale, d:
Math.sqrt(x*x+y*y+z*z)
}; }else{ return { x:cx+(rx1+ua*(rx2-rx1))*scale, y:cy+y/z*scale, d:-1 }; } }

function spawnSeed(){

	seed=new Object();
	seed.x=-50+Math.random()*100;
	seed.y=25;
	seed.z=-50+Math.random()*100;
	seed.vx=.1-Math.random()*.2;
	seed.vy=-1.5;//*(1+Math.random()/2);
	seed.vz=.1-Math.random()*.2;
	seed.born=frames;
	seeds.push(seed);

}

function splode(x,y,z){

	t=5+parseInt(Math.random()*150);
	sparkV=1+Math.random()*2.5;
	type=parseInt(Math.random()*3);
	switch(type){
		case 0:
			pic1=parseInt(Math.random()*10);
			break;
		case 1:
			pic1=parseInt(Math.random()*10);
			do{ pic2=parseInt(Math.random()*10); }while(pic2==pic1);
			break;
		case 2:
			pic1=parseInt(Math.random()*10);
			do{ pic2=parseInt(Math.random()*10); }while(pic2==pic1);
			do{ pic3=parseInt(Math.random()*10); }while(pic3==pic1 || pic3==pic2);
			break;
	}
	for(m=1;m<t;++m){
		spark=new Object();
		spark.x=x; spark.y=y; spark.z=z;
		p1=pi*2*Math.random();
		p2=pi*Math.random();
		v=sparkV*(1+Math.random()/6)
		spark.vx=Math.sin(p1)*Math.sin(p2)*v;
		spark.vz=Math.cos(p1)*Math.sin(p2)*v;
		spark.vy=Math.cos(p2)*v;
		switch(type){
			case 0: spark.img=sparkPics[pic1]; break;
			case 1:
				spark.img=sparkPics[parseInt(Math.random()*2)?pic1:pic2];
				break;
			case 2:
				switch(parseInt(Math.random()*3)){
					case 0: spark.img=sparkPics[pic1]; break;
					case 1: spark.img=sparkPics[pic2]; break;
					case 2: spark.img=sparkPics[pic3]; break;
				}
				break;
		}
		spark.radius=25+Math.random()*50;
		spark.alpha=1;
		spark.trail=new Array();
		sparks.push(spark);
	}
	switch(parseInt(Math.random()*4)){
		case 0:	pow=new Audio(s+"pow1.ogg"); break;
		case 1:	pow=new Audio(s+"pow2.ogg"); break;
		case 2:	pow=new Audio(s+"pow3.ogg"); break;
		case 3:	pow=new Audio(s+"pow4.ogg"); break;
	}
	d=Math.sqrt((x-playerX)*(x-playerX)+(y-playerY)*(y-playerY)+(z-playerZ)*(z-playerZ));
	pow.volume=1.5/(1+d/10);
	pow.play();

}

function doLogic(){

	if(seedTimer<frames){
		seedTimer=frames+seedInterval*Math.random()*10;
		spawnSeed();
	}
	for(i=0;i<seeds.length;++i){
		seeds[i].vy+=gravity;
		seeds[i].x+=seeds[i].vx;
		seeds[i].y+=seeds[i].vy;
		seeds[i].z+=seeds[i].vz;
		if(frames-seeds[i].born>seedLife){
			splode(seeds[i].x,seeds[i].y,seeds[i].z);
			seeds.splice(i,1);
		}
	}
	for(i=0;i<sparks.length;++i){
		if(sparks[i].alpha>0 && sparks[i].radius>5){
			sparks[i].alpha-=.01;
			sparks[i].radius/=1.02;
			sparks[i].vy+=gravity;
			point=new Object();
			point.x=sparks[i].x;
			point.y=sparks[i].y;
			point.z=sparks[i].z;
			if(sparks[i].trail.length){
				x=sparks[i].trail[sparks[i].trail.length-1].x;
				y=sparks[i].trail[sparks[i].trail.length-1].y;
				z=sparks[i].trail[sparks[i].trail.length-1].z;
				d=((point.x-x)*(point.x-x)+(point.y-y)*(point.y-y)+(point.z-z)*(point.z-z));
				if(d>9){
					sparks[i].trail.push(point);
				}
			}else{
				sparks[i].trail.push(point);
			}
			if(sparks[i].trail.length>5)sparks[i].trail.splice(0,1);				
			sparks[i].x+=sparks[i].vx;
			sparks[i].y+=sparks[i].vy;
			sparks[i].z+=sparks[i].vz;
			sparks[i].vx/=1.075;
			sparks[i].vy/=1.075;
			sparks[i].vz/=1.075;
		}else{
			sparks.splice(i,1);
		}
	}
	p=Math.atan2(playerX,playerZ);
	d=Math.sqrt(playerX*playerX+playerZ*playerZ);
	d+=Math.sin(frames/80)/1.25;
	t=Math.sin(frames/200)/40;
	playerX=Math.sin(p+t)*d;
	playerZ=Math.cos(p+t)*d;
	yaw=pi+p+t;

}

function rgb(col){

	var r = parseInt((.5+Math.sin(col)*.5)*16);
	var g = parseInt((.5+Math.cos(col)*.5)*16);
	var b = parseInt((.5-Math.sin(col)*.5)*16);
	return "#"+r.toString(16)+g.toString(16)+b.toString(16);

}

function draw(){

	ctx.clearRect(0,0,cx*2,cy*2);
	
	ctx.fillStyle="#ff8";
	for(i=-100;i<100;i+=3){
		for(j=-100;j<100;j+=4){
			x=i;z=j;y=25;
			point=rasterizePoint(x,y,z);
			if(point.d!=-1){
				size=250/(1+point.d);
				d = Math.sqrt(x * x + z * z);
				a = 0.75 - Math.pow(d / 100, 6) * 0.75;
				if(a>0){
					ctx.globalAlpha = a;
					ctx.fillRect(point.x-size/2,point.y-size/2,size,size);				
				}
			}
		}
	}
	ctx.globalAlpha=1;
	for(i=0;i<seeds.length;++i){
		point=rasterizePoint(seeds[i].x,seeds[i].y,seeds[i].z);
		if(point.d!=-1){
			size=200/(1+point.d);
			ctx.fillRect(point.x-size/2,point.y-size/2,size,size);
		}
	}
	point1=new Object();
	for(i=0;i<sparks.length;++i){
		point=rasterizePoint(sparks[i].x,sparks[i].y,sparks[i].z);
		if(point.d!=-1){
			size=sparks[i].radius*200/(1+point.d);
			if(sparks[i].alpha<0)sparks[i].alpha=0;
			if(sparks[i].trail.length){
				point1.x=point.x;
				point1.y=point.y;
				switch(sparks[i].img){
					case sparkPics[0]:ctx.strokeStyle="#f84";break;
					case sparkPics[1]:ctx.strokeStyle="#84f";break;
					case sparkPics[2]:ctx.strokeStyle="#8ff";break;
					case sparkPics[3]:ctx.strokeStyle="#fff";break;
					case sparkPics[4]:ctx.strokeStyle="#4f8";break;
					case sparkPics[5]:ctx.strokeStyle="#f44";break;
					case sparkPics[6]:ctx.strokeStyle="#f84";break;
					case sparkPics[7]:ctx.strokeStyle="#84f";break;
					case sparkPics[8]:ctx.strokeStyle="#fff";break;
					case sparkPics[9]:ctx.strokeStyle="#44f";break;
				}
				for(j=sparks[i].trail.length-1;j>=0;--j){
					point2=rasterizePoint(sparks[i].trail[j].x,sparks[i].trail[j].y,sparks[i].trail[j].z);
					if(point2.d!=-1){
						ctx.globalAlpha=j/sparks[i].trail.length*sparks[i].alpha/2;
						ctx.beginPath();
						ctx.moveTo(point1.x,point1.y);
						ctx.lineWidth=1+sparks[i].radius*10/(sparks[i].trail.length-j)/(1+point2.d);
						ctx.lineTo(point2.x,point2.y);
						ctx.stroke();
						point1.x=point2.x;
						point1.y=point2.y;
					}
				}
			}
			ctx.globalAlpha=sparks[i].alpha;
			ctx.drawImage(sparks[i].img,point.x-size/2,point.y-size/2,size,size);
		}
	}

}

function frame(){

	if(frames>100000){
		seedTimer=0;
		frames=0;
	}
	frames++;
	draw();
	doLogic();
	requestAnimationFrame(frame);

}

window.addEventListener("resize",()=>{ canvas.width=canvas.clientWidth; canvas.height=canvas.clientHeight;
cx=canvas.width/2; cy=canvas.height/2; });

initVars(); frame();</script>
<div style="text-align:center;">
</div>
</body>
</html>]]></content><author><name>Your Name</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">使用tikz绘制党徽</title><link href="/2021/07/02/%E4%BD%BF%E7%94%A8TikZ%E7%BB%98%E5%88%B6%E5%85%9A%E5%BE%BD.html" rel="alternate" type="text/html" title="使用tikz绘制党徽" /><published>2021-07-02T00:00:00+08:00</published><updated>2021-07-02T00:00:00+08:00</updated><id>/2021/07/02/%E4%BD%BF%E7%94%A8TikZ%E7%BB%98%E5%88%B6%E5%85%9A%E5%BE%BD</id><content type="html" xml:base="/2021/07/02/%E4%BD%BF%E7%94%A8TikZ%E7%BB%98%E5%88%B6%E5%85%9A%E5%BE%BD.html"><![CDATA[<h1 id="前言">前言</h1>
<p>党的一百周年生日之际, 用TikZ绘图命令作出党徽设计图, 献礼党的生日~</p>

<h1 id="绘制方法">绘制方法</h1>
<blockquote>
  <ol>
    <li>将一正方形分为32等分，分格线条编号为横向1～33，竖向1′～33′。画出对角线AC、BD。</li>
    <li>锤头的画法：连接E(29、33′)、F(33、29′)，并从E、F两点作AC的平行线，构成锤把。从G点(8、918′、19′的中点)作BD的平行线至H(19、207′、8′的中点)，从G、H两点分别作AC的平行线至I(4、14′)、J(17、5′)，从I点作BD的平行线，以K点(13、141′的中点)为圆心、KJ为半径画弧交于L点，构成锤头。</li>
    <li>镰刀的画法：以M点(17、17′)为圆心、MN(N点为17、1′)为半径画弧⌒NO(O点为17、33′)；以P点(17、15′)为圆心、PO为半径画弧，与HG的延长线交于Q点；以R点(1116′、17′中点)为圆心、RN为半径画弧，与通过R点的水平线交于S点；以T点(16、1716′、17′的中点)为圆心、TS为半径画弧，与通过T点的垂直线交于U点；以V点(16、1711′中点)为圆心、VU为半径画弧，与HG的延长线交于W，构成镰刀。以X点(3、430′、31′的中点)为圆心作圆与AB、BC线相切，从Y点(6、30′)、Z点(4、28′)分别作直线平行于BD，构成镰刀把。</li>
  </ol>
</blockquote>

<h1 id="图形">图形</h1>
<div align="center"><img src="../../../src/images/cpc_emblem.png" width="60%" /></div>
<p> </p>
<div align="center"><img src="../../../src/images/cpc-emblem-color.png" width="60%" /></div>

<h1 id="代码">代码</h1>

<h2 id="设计图代码">设计图代码</h2>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\documentclass</span><span class="na">[tikz,border=3pt]</span><span class="p">{</span>standalone<span class="p">}</span>
<span class="k">\usetikzlibrary</span><span class="p">{</span>calc<span class="p">}</span>
<span class="k">\usetikzlibrary</span><span class="p">{</span>intersections,through<span class="p">}</span>

<span class="c">% 中国共产党党徽制法图案</span>
<span class="c">% 摘自http://news.12371.cn/2018/04/13/ARTI1523583923915284.shtml</span>
<span class="c">% 1. 将一正方形分为32等分，分格线条编号为横向1～33，竖向1′～33′。画出对角线AC、BD。</span>

<span class="c">% 2. 锤头的画法：连接E(29、33′)、F(33、29′)，并从E、F两点作AC的平行线，构成锤把。从G点(8、918′、19′的中点)作BD的平行线至H(19、207′、8′的中点)，从G、H两点分别作AC的平行线至I(4、14′)、J(17、5′)，从I点作BD的平行线，以K点(13、141′的中点)为圆心、KJ为半径画弧交于L点，构成锤头。</span>

<span class="c">% 3. 镰刀的画法：以M点(17、17′)为圆心、MN(N点为17、1′)为半径画弧⌒NO(O点为17、33′)；以P点(17、15′)为圆心、PO为半径画弧，与HG的延长线交于Q点；以R点(1116′、17′中点)为圆心、RN为半径画弧，与通过R点的水平线交于S点；以T点(16、1716′、17′的中点)为圆心、TS为半径画弧，与通过T点的垂直线交于U点；以V点(16、1711′中点)为圆心、VU为半径画弧，与HG的延长线交于W，构成镰刀。以X点(3、430′、31′的中点)为圆心作圆与AB、BC线相切，从Y点(6、30′)、Z点(4、28′)分别作直线平行于BD，构成镰刀把。</span>
<span class="nt">\begin{document}</span>
    <span class="nt">\begin{tikzpicture}</span>[]
        <span class="c">% 绘制辅助线</span>
        <span class="k">\draw</span> (0,0) rectangle (32,32);
        <span class="k">\draw</span> [help lines] (0,0) grid (32,32);

        <span class="c">% 标记坐标轴的点</span>
        <span class="k">\foreach</span> <span class="k">\i</span> in <span class="p">{</span>33,32,...,1<span class="p">}</span>
        <span class="p">{</span>
            <span class="k">\coordinate</span> (<span class="k">\i</span>) at (<span class="p">$</span><span class="o">(</span><span class="m">0</span><span class="nb">,</span><span class="m">33</span><span class="o">)-(</span><span class="m">0</span><span class="nb">,</span><span class="nv">\i</span><span class="o">)</span><span class="p">$</span>);
            <span class="k">\coordinate</span> (<span class="k">\i</span>') at (<span class="p">$</span><span class="o">(-</span><span class="m">1</span><span class="nb">,</span><span class="m">32</span><span class="o">)+(</span><span class="nv">\i</span><span class="nb">,</span><span class="m">0</span><span class="o">)</span><span class="p">$</span>);
            <span class="k">\coordinate</span> [label=left:<span class="p">$</span><span class="nv">\i</span><span class="nb">'</span><span class="p">$</span>] (<span class="k">\i</span>') at (<span class="p">$</span><span class="o">(-</span><span class="nb">.</span><span class="m">3</span><span class="nb">,</span><span class="m">33</span><span class="o">)-(</span><span class="m">0</span><span class="nb">,</span><span class="nv">\i</span><span class="o">)</span><span class="p">$</span>);
            <span class="k">\coordinate</span> [label=above:<span class="p">$</span><span class="nv">\i</span><span class="p">$</span>] (<span class="k">\i</span>) at (<span class="p">$</span><span class="o">(-</span><span class="m">1</span><span class="nb">,</span><span class="m">32</span><span class="nb">.</span><span class="m">3</span><span class="o">)+(</span><span class="nv">\i</span><span class="nb">,</span><span class="m">0</span><span class="o">)</span><span class="p">$</span>);
        <span class="p">}</span>

        <span class="c">% 作对角线AC, BD</span>
        <span class="k">\coordinate</span> [label=above left:<span class="p">$</span><span class="nb">A</span><span class="p">$</span>] (A)  at (0,32);
        <span class="k">\coordinate</span> [label=below right:<span class="p">$</span><span class="nb">C</span><span class="p">$</span>] (C)  at (32,0);
        <span class="k">\coordinate</span> [label=below left:<span class="p">$</span><span class="nb">B</span><span class="p">$</span>] (B)  at (0,0);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">D</span><span class="p">$</span>] (D)  at (32,32);
        <span class="k">\draw</span> [name path=AC] (A) -- (31,1);
        <span class="k">\draw</span> [name path=BD] (B) -- (D);

        <span class="c">%%%%%% 锤头 %%%%%%%</span>
        <span class="c">% 绘制锤把</span>
        <span class="k">\coordinate</span> [label=below:<span class="p">$</span><span class="nb">E</span><span class="p">$</span>] (E) at (28,0);
        <span class="k">\coordinate</span> [label=right:<span class="p">$</span><span class="nb">F</span><span class="p">$</span>] (F) at (32,4);
        <span class="k">\draw</span> [name path=EF, very thick] (E) -- (F);
        <span class="k">\draw</span> [very thick] (E) -- (25.1,2.9);
        <span class="k">\draw</span> [very thick] (F) -- (29.1,6.9);

        <span class="k">\draw</span> [very thick] (21,7) -- (10.5,17.5);
        <span class="k">\draw</span> [very thick] (25,11) -- (14.5,21.5);

        <span class="c">% 绘制锤头</span>
        <span class="k">\coordinate</span> [label=left:<span class="p">$</span><span class="nb">G</span><span class="p">$</span>] (G) at (7.5, 14.5);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">H</span><span class="p">$</span>] (H) at (18.5, 25.5);
        <span class="k">\draw</span> [very thick] (G) -- (10.5,17.5);
        <span class="k">\draw</span> [very thick] (H) -- (14.5,21.5);
        <span class="k">\coordinate</span> [label=above left:<span class="p">$</span><span class="nb">I</span><span class="p">$</span>] (I) at (3,19);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">J</span><span class="p">$</span>] (J) at (16, 28);
        <span class="k">\draw</span> [name path=GI, very thick] (G) -- (I);
        <span class="k">\draw</span> [name path=HJ, very thick] (H) -- (J);
        <span class="k">\coordinate</span> [label=above:<span class="p">$</span><span class="nb">L</span><span class="p">$</span>] (L) at (11,27);
        <span class="k">\draw</span> [name path=IL, very thick] (I) -- (L);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">K</span><span class="p">$</span>] (K) at (12.7, 32);
        <span class="k">\draw</span> [densely dashed] (K) -- (J);
        <span class="k">\draw</span> [name path=KJL, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">K</span><span class="o">)-(</span><span class="nb">J</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (J) arc (-49:-108:<span class="k">\n</span>1);


        <span class="c">%%%%%% 镰刀 %%%%%%%</span>
        <span class="c">% 绘制镰刀</span>
        <span class="k">\coordinate</span> (M) at (16,16);
        <span class="k">\coordinate</span> [label=above:<span class="p">$</span><span class="nb">N</span><span class="p">$</span>](N) at (16,32);
        <span class="k">\coordinate</span> [label=below:<span class="p">$</span><span class="nb">O</span><span class="p">$</span>] (O) at (16,0);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">P</span><span class="p">$</span>] (P) at (16,18);
        <span class="k">\coordinate</span> [label=above left:<span class="p">$</span><span class="nb">Q</span><span class="p">$</span>] (Q) at (1,8);
        <span class="k">\draw</span> [densely dashed, name path=GH] (G) -- (Q);
        <span class="k">\coordinate</span> [label=above right:<span class="p">$</span><span class="nb">R</span><span class="p">$</span>] (R) at (10,16.5);
        <span class="k">\coordinate</span> [label=below left:<span class="p">$</span><span class="nb">T</span><span class="p">$</span>] (T) at (15.5,16.5);
        <span class="k">\coordinate</span> [label=below right:<span class="p">$</span><span class="nb">V</span><span class="p">$</span>] (V) at (15.5,22);

        <span class="k">\draw</span> [very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">M</span><span class="o">)-(</span><span class="nb">N</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1, <span class="k">\y</span>1)<span class="p">}</span>
        in 
            (N) arc (90:-35:<span class="k">\n</span>1)
            (O) arc (270:305:<span class="k">\n</span>1)
            (O) arc (271:230.7:<span class="k">\n</span>1)
            (Q) arc (218:230.6:<span class="k">\n</span>1);

        <span class="k">\draw</span> [name path=RS,densely dashed] (R) -- (32,16.5);
        <span class="k">\draw</span> [name path=RNS, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">R</span><span class="o">)-(</span><span class="nb">N</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (N) arc (66.5:-20:<span class="k">\n</span>1);

        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=RNS and RS<span class="p">}</span>]
            coordinate [label=above left:<span class="p">$</span><span class="nb">S</span><span class="p">$</span>] (S) at (intersection-1);

        <span class="k">\draw</span> [densely dashed, name path=TU]
            (T) -- (15.5,0);
        <span class="k">\draw</span> [name path=TUS, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">T</span><span class="o">)-(</span><span class="nb">S</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (21,7) arc (305:272:<span class="k">\n</span>1);

        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=TUS and TU<span class="p">}</span>]
            coordinate [label=below right:<span class="p">$</span><span class="nb">U</span><span class="p">$</span>] (U) at (intersection-1);

        <span class="k">\draw</span> [name path=UVW, very thick] 
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">U</span><span class="o">)-(</span><span class="nb">V</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (U) arc (268:222.3:<span class="k">\n</span>1);
        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=UVW and GH<span class="p">}</span>]
            coordinate [label=above left:<span class="p">$</span><span class="nb">W</span><span class="p">$</span>] (W) at (intersection-1);
        <span class="k">\draw</span> [very thick] (W) -- (Q);

        <span class="c">% 绘制镰刀把</span>
        <span class="k">\coordinate</span> [label=below:<span class="p">$</span><span class="nb">X</span><span class="p">$</span>] (X) at (2.5,2.5);
        <span class="k">\coordinate</span> [label=below right:<span class="p">$</span><span class="nb">Y</span><span class="p">$</span>] (Y) at (5,3);
        <span class="k">\coordinate</span> [label=above left:<span class="p">$</span><span class="nb">Z</span><span class="p">$</span>] (Z) at (3,5); 
        <span class="k">\draw</span> [very thick] 
            (2.5,5) arc (90:365:2.5)
            (2.5,5) arc (90:79:2.5)
            (5,2.5) arc (0:11:2.5) 
            (2.94,4.94) -- (3.48,5.48)
            (4.94,2.94) -- (5.6,3.6);

    <span class="nt">\end{tikzpicture}</span>
<span class="nt">\end{document}</span>
</code></pre></div></div>

<h2 id="无辅助线代码">无辅助线代码</h2>

<div class="language-latex highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">\documentclass</span><span class="na">[tikz,border=3pt]</span><span class="p">{</span>standalone<span class="p">}</span>
<span class="k">\usetikzlibrary</span><span class="p">{</span>calc<span class="p">}</span>
<span class="k">\usetikzlibrary</span><span class="p">{</span>intersections,through<span class="p">}</span>

<span class="nt">\begin{document}</span>
    <span class="nt">\begin{tikzpicture}</span>[]
        <span class="c">% 作对角线AC, BD</span>
        <span class="k">\coordinate</span>  (A)  at (0,32);
        <span class="k">\coordinate</span>  (C)  at (32,0);
        <span class="k">\coordinate</span>  (B)  at (0,0);
        <span class="k">\coordinate</span>  (D)  at (32,32);
        <span class="k">\path</span> [name path=AC] (A) -- (31,1);
        <span class="k">\path</span> [name path=BD] (B) -- (D);

        <span class="c">%%%%%% 锤头 %%%%%%%</span>
        <span class="c">% 绘制锤把</span>
        <span class="k">\coordinate</span> (E) at (28,0);
        <span class="k">\coordinate</span> (F) at (32,4);
        <span class="k">\draw</span> [name path=EF, very thick] (E) -- (F);
        <span class="k">\draw</span> [very thick] (E) -- (25.1,2.9);
        <span class="k">\draw</span> [very thick] (F) -- (29.1,6.9);

        <span class="k">\draw</span> [very thick] (21,7) -- (10.5,17.5);
        <span class="k">\draw</span> [very thick] (25,11) -- (14.5,21.5);

        <span class="c">% 绘制锤头</span>
        <span class="k">\coordinate</span> (G) at (7.5, 14.5);
        <span class="k">\coordinate</span> (H) at (18.5, 25.5);
        <span class="k">\draw</span> [very thick] (G) -- (10.5,17.5);
        <span class="k">\draw</span> [very thick] (H) -- (14.5,21.5);
        <span class="k">\coordinate</span> (I) at (3,19);
        <span class="k">\coordinate</span> (J) at (16, 28);
        <span class="k">\draw</span> [name path=GI, very thick] (G) -- (I);
        <span class="k">\draw</span> [name path=HJ, very thick] (H) -- (J);
        <span class="k">\coordinate</span> (L) at (11,27);
        <span class="k">\draw</span> [name path=IL, very thick] (I) -- (L);
        <span class="k">\coordinate</span> (K) at (12.7, 32);
        <span class="k">\draw</span> [name path=KJL, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">K</span><span class="o">)-(</span><span class="nb">J</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (J) arc (-49:-108:<span class="k">\n</span>1);


        <span class="c">%%%%%% 镰刀 %%%%%%%</span>
        <span class="c">% 绘制镰刀</span>
        <span class="k">\coordinate</span> (M) at (16,16);
        <span class="k">\coordinate</span> (N) at (16,32);
        <span class="k">\coordinate</span> (O) at (16,0);
        <span class="k">\coordinate</span> (P) at (16,18);
        <span class="k">\coordinate</span> (Q) at (1,8);
        <span class="k">\path</span> [name path=GH] (G) -- (Q);
        <span class="k">\coordinate</span> (R) at (10,16.5);
        <span class="k">\coordinate</span> (T) at (15.5,16.5);
        <span class="k">\coordinate</span> (V) at (15.5,22);

        <span class="k">\draw</span> [very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">M</span><span class="o">)-(</span><span class="nb">N</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1, <span class="k">\y</span>1)<span class="p">}</span>
        in 
            (N) arc (90:-35:<span class="k">\n</span>1)
            (O) arc (270:305:<span class="k">\n</span>1)
            (O) arc (271:230.7:<span class="k">\n</span>1)
            (Q) arc (218:230.6:<span class="k">\n</span>1);

        <span class="k">\path</span> [name path=RS] (R) -- (32,16.5);
        <span class="k">\draw</span> [name path=RNS, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">R</span><span class="o">)-(</span><span class="nb">N</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (N) arc (66.5:-20:<span class="k">\n</span>1);

        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=RNS and RS<span class="p">}</span>]
            coordinate (S) at (intersection-1);

        <span class="k">\path</span> [name path=TU]
            (T) -- (15.5,0);
        <span class="k">\draw</span> [name path=TUS, very thick]
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">T</span><span class="o">)-(</span><span class="nb">S</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (21,7) arc (305:272:<span class="k">\n</span>1);

        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=TUS and TU<span class="p">}</span>]
            coordinate (U) at (intersection-1);

        <span class="k">\draw</span> [name path=UVW, very thick] 
        let 
            <span class="k">\p</span>1=(<span class="p">$</span><span class="o">(</span><span class="nb">U</span><span class="o">)-(</span><span class="nb">V</span><span class="o">)</span><span class="p">$</span>),
            <span class="k">\n</span>1=<span class="p">{</span>veclen(<span class="k">\x</span>1,<span class="k">\y</span>1)<span class="p">}</span>
        in 
            (U) arc (268:222.3:<span class="k">\n</span>1);
        <span class="k">\path</span> [name intersections=<span class="p">{</span>of=UVW and GH<span class="p">}</span>]
            coordinate (W) at (intersection-1);
        <span class="k">\draw</span> [very thick] (W) -- (Q);

        <span class="c">% 绘制镰刀把</span>
        <span class="k">\coordinate</span> (X) at (2.5,2.5);
        <span class="k">\coordinate</span> (Y) at (5,3);
        <span class="k">\coordinate</span> (Z) at (3,5); 
        <span class="k">\draw</span> [very thick] 
            (2.5,5) arc (90:365:2.5)
            (2.5,5) arc (90:79:2.5)
            (5,2.5) arc (0:11:2.5) 
            (2.94,4.94) -- (3.48,5.48)
            (4.94,2.94) -- (5.6,3.6);

    <span class="nt">\end{tikzpicture}</span>
<span class="nt">\end{document}</span>
</code></pre></div></div>]]></content><author><name>zorchp</name></author><summary type="html"><![CDATA[前言 党的一百周年生日之际, 用TikZ绘图命令作出党徽设计图, 献礼党的生日~ 绘制方法 将一正方形分为32等分，分格线条编号为横向1～33，竖向1′～33′。画出对角线AC、BD。 锤头的画法：连接E(29、33′)、F(33、29′)，并从E、F两点作AC的平行线，构成锤把。从G点(8、918′、19′的中点)作BD的平行线至H(19、207′、8′的中点)，从G、H两点分别作AC的平行线至I(4、14′)、J(17、5′)，从I点作BD的平行线，以K点(13、141′的中点)为圆心、KJ为半径画弧交于L点，构成锤头。 镰刀的画法：以M点(17、17′)为圆心、MN(N点为17、1′)为半径画弧⌒NO(O点为17、33′)；以P点(17、15′)为圆心、PO为半径画弧，与HG的延长线交于Q点；以R点(1116′、17′中点)为圆心、RN为半径画弧，与通过R点的水平线交于S点；以T点(16、1716′、17′的中点)为圆心、TS为半径画弧，与通过T点的垂直线交于U点；以V点(16、1711′中点)为圆心、VU为半径画弧，与HG的延长线交于W，构成镰刀。以X点(3、430′、31′的中点)为圆心作圆与AB、BC线相切，从Y点(6、30′)、Z点(4、28′)分别作直线平行于BD，构成镰刀把。 图形 代码 设计图代码 \documentclass[tikz,border=3pt]{standalone} \usetikzlibrary{calc} \usetikzlibrary{intersections,through} % 中国共产党党徽制法图案 % 摘自http://news.12371.cn/2018/04/13/ARTI1523583923915284.shtml % 1. 将一正方形分为32等分，分格线条编号为横向1～33，竖向1′～33′。画出对角线AC、BD。 % 2. 锤头的画法：连接E(29、33′)、F(33、29′)，并从E、F两点作AC的平行线，构成锤把。从G点(8、918′、19′的中点)作BD的平行线至H(19、207′、8′的中点)，从G、H两点分别作AC的平行线至I(4、14′)、J(17、5′)，从I点作BD的平行线，以K点(13、141′的中点)为圆心、KJ为半径画弧交于L点，构成锤头。 % 3. 镰刀的画法：以M点(17、17′)为圆心、MN(N点为17、1′)为半径画弧⌒NO(O点为17、33′)；以P点(17、15′)为圆心、PO为半径画弧，与HG的延长线交于Q点；以R点(1116′、17′中点)为圆心、RN为半径画弧，与通过R点的水平线交于S点；以T点(16、1716′、17′的中点)为圆心、TS为半径画弧，与通过T点的垂直线交于U点；以V点(16、1711′中点)为圆心、VU为半径画弧，与HG的延长线交于W，构成镰刀。以X点(3、430′、31′的中点)为圆心作圆与AB、BC线相切，从Y点(6、30′)、Z点(4、28′)分别作直线平行于BD，构成镰刀把。 \begin{document} \begin{tikzpicture}[] % 绘制辅助线 \draw (0,0) rectangle (32,32); \draw [help lines] (0,0) grid (32,32); % 标记坐标轴的点 \foreach \i in {33,32,...,1} { \coordinate (\i) at ($(0,33)-(0,\i)$); \coordinate (\i') at ($(-1,32)+(\i,0)$); \coordinate [label=left:$\i'$] (\i') at ($(-.3,33)-(0,\i)$); \coordinate [label=above:$\i$] (\i) at ($(-1,32.3)+(\i,0)$); } % 作对角线AC, BD \coordinate [label=above left:$A$] (A) at (0,32); \coordinate [label=below right:$C$] (C) at (32,0); \coordinate [label=below left:$B$] (B) at (0,0); \coordinate [label=above right:$D$] (D) at (32,32); \draw [name path=AC] (A) -- (31,1); \draw [name path=BD] (B) -- (D); %%%%%% 锤头 %%%%%%% % 绘制锤把 \coordinate [label=below:$E$] (E) at (28,0); \coordinate [label=right:$F$] (F) at (32,4); \draw [name path=EF, very thick] (E) -- (F); \draw [very thick] (E) -- (25.1,2.9); \draw [very thick] (F) -- (29.1,6.9); \draw [very thick] (21,7) -- (10.5,17.5); \draw [very thick] (25,11) -- (14.5,21.5); % 绘制锤头 \coordinate [label=left:$G$] (G) at (7.5, 14.5); \coordinate [label=above right:$H$] (H) at (18.5, 25.5); \draw [very thick] (G) -- (10.5,17.5); \draw [very thick] (H) -- (14.5,21.5); \coordinate [label=above left:$I$] (I) at (3,19); \coordinate [label=above right:$J$] (J) at (16, 28); \draw [name path=GI, very thick] (G) -- (I); \draw [name path=HJ, very thick] (H) -- (J); \coordinate [label=above:$L$] (L) at (11,27); \draw [name path=IL, very thick] (I) -- (L); \coordinate [label=above right:$K$] (K) at (12.7, 32); \draw [densely dashed] (K) -- (J); \draw [name path=KJL, very thick] let \p1=($(K)-(J)$), \n1={veclen(\x1,\y1)} in (J) arc (-49:-108:\n1); %%%%%% 镰刀 %%%%%%% % 绘制镰刀 \coordinate (M) at (16,16); \coordinate [label=above:$N$](N) at (16,32); \coordinate [label=below:$O$] (O) at (16,0); \coordinate [label=above right:$P$] (P) at (16,18); \coordinate [label=above left:$Q$] (Q) at (1,8); \draw [densely dashed, name path=GH] (G) -- (Q); \coordinate [label=above right:$R$] (R) at (10,16.5); \coordinate [label=below left:$T$] (T) at (15.5,16.5); \coordinate [label=below right:$V$] (V) at (15.5,22); \draw [very thick] let \p1=($(M)-(N)$), \n1={veclen(\x1, \y1)} in (N) arc (90:-35:\n1) (O) arc (270:305:\n1) (O) arc (271:230.7:\n1) (Q) arc (218:230.6:\n1); \draw [name path=RS,densely dashed] (R) -- (32,16.5); \draw [name path=RNS, very thick] let \p1=($(R)-(N)$), \n1={veclen(\x1,\y1)} in (N) arc (66.5:-20:\n1); \path [name intersections={of=RNS and RS}] coordinate [label=above left:$S$] (S) at (intersection-1); \draw [densely dashed, name path=TU] (T) -- (15.5,0); \draw [name path=TUS, very thick] let \p1=($(T)-(S)$), \n1={veclen(\x1,\y1)} in (21,7) arc (305:272:\n1); \path [name intersections={of=TUS and TU}] coordinate [label=below right:$U$] (U) at (intersection-1); \draw [name path=UVW, very thick] let \p1=($(U)-(V)$), \n1={veclen(\x1,\y1)} in (U) arc (268:222.3:\n1); \path [name intersections={of=UVW and GH}] coordinate [label=above left:$W$] (W) at (intersection-1); \draw [very thick] (W) -- (Q); % 绘制镰刀把 \coordinate [label=below:$X$] (X) at (2.5,2.5); \coordinate [label=below right:$Y$] (Y) at (5,3); \coordinate [label=above left:$Z$] (Z) at (3,5); \draw [very thick] (2.5,5) arc (90:365:2.5) (2.5,5) arc (90:79:2.5) (5,2.5) arc (0:11:2.5) (2.94,4.94) -- (3.48,5.48) (4.94,2.94) -- (5.6,3.6); \end{tikzpicture} \end{document} 无辅助线代码 \documentclass[tikz,border=3pt]{standalone} \usetikzlibrary{calc} \usetikzlibrary{intersections,through} \begin{document} \begin{tikzpicture}[] % 作对角线AC, BD \coordinate (A) at (0,32); \coordinate (C) at (32,0); \coordinate (B) at (0,0); \coordinate (D) at (32,32); \path [name path=AC] (A) -- (31,1); \path [name path=BD] (B) -- (D); %%%%%% 锤头 %%%%%%% % 绘制锤把 \coordinate (E) at (28,0); \coordinate (F) at (32,4); \draw [name path=EF, very thick] (E) -- (F); \draw [very thick] (E) -- (25.1,2.9); \draw [very thick] (F) -- (29.1,6.9); \draw [very thick] (21,7) -- (10.5,17.5); \draw [very thick] (25,11) -- (14.5,21.5); % 绘制锤头 \coordinate (G) at (7.5, 14.5); \coordinate (H) at (18.5, 25.5); \draw [very thick] (G) -- (10.5,17.5); \draw [very thick] (H) -- (14.5,21.5); \coordinate (I) at (3,19); \coordinate (J) at (16, 28); \draw [name path=GI, very thick] (G) -- (I); \draw [name path=HJ, very thick] (H) -- (J); \coordinate (L) at (11,27); \draw [name path=IL, very thick] (I) -- (L); \coordinate (K) at (12.7, 32); \draw [name path=KJL, very thick] let \p1=($(K)-(J)$), \n1={veclen(\x1,\y1)} in (J) arc (-49:-108:\n1); %%%%%% 镰刀 %%%%%%% % 绘制镰刀 \coordinate (M) at (16,16); \coordinate (N) at (16,32); \coordinate (O) at (16,0); \coordinate (P) at (16,18); \coordinate (Q) at (1,8); \path [name path=GH] (G) -- (Q); \coordinate (R) at (10,16.5); \coordinate (T) at (15.5,16.5); \coordinate (V) at (15.5,22); \draw [very thick] let \p1=($(M)-(N)$), \n1={veclen(\x1, \y1)} in (N) arc (90:-35:\n1) (O) arc (270:305:\n1) (O) arc (271:230.7:\n1) (Q) arc (218:230.6:\n1); \path [name path=RS] (R) -- (32,16.5); \draw [name path=RNS, very thick] let \p1=($(R)-(N)$), \n1={veclen(\x1,\y1)} in (N) arc (66.5:-20:\n1); \path [name intersections={of=RNS and RS}] coordinate (S) at (intersection-1); \path [name path=TU] (T) -- (15.5,0); \draw [name path=TUS, very thick] let \p1=($(T)-(S)$), \n1={veclen(\x1,\y1)} in (21,7) arc (305:272:\n1); \path [name intersections={of=TUS and TU}] coordinate (U) at (intersection-1); \draw [name path=UVW, very thick] let \p1=($(U)-(V)$), \n1={veclen(\x1,\y1)} in (U) arc (268:222.3:\n1); \path [name intersections={of=UVW and GH}] coordinate (W) at (intersection-1); \draw [very thick] (W) -- (Q); % 绘制镰刀把 \coordinate (X) at (2.5,2.5); \coordinate (Y) at (5,3); \coordinate (Z) at (3,5); \draw [very thick] (2.5,5) arc (90:365:2.5) (2.5,5) arc (90:79:2.5) (5,2.5) arc (0:11:2.5) (2.94,4.94) -- (3.48,5.48) (4.94,2.94) -- (5.6,3.6); \end{tikzpicture} \end{document}]]></summary></entry><entry><title type="html">Css学习</title><link href="/2021/04/12/css%E5%AD%A6%E4%B9%A0.html" rel="alternate" type="text/html" title="Css学习" /><published>2021-04-12T00:00:00+08:00</published><updated>2021-04-12T00:00:00+08:00</updated><id>/2021/04/12/css%E5%AD%A6%E4%B9%A0</id><content type="html" xml:base="/2021/04/12/css%E5%AD%A6%E4%B9%A0.html"><![CDATA[<div class="special"></div>]]></content><author><name>Your Name</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">自己写的mean Square Error</title><link href="/2021/03/26/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84mean-square-error.html" rel="alternate" type="text/html" title="自己写的mean Square Error" /><published>2021-03-26T00:00:00+08:00</published><updated>2021-03-26T00:00:00+08:00</updated><id>/2021/03/26/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84mean-square-error</id><content type="html" xml:base="/2021/03/26/%E8%87%AA%E5%B7%B1%E5%86%99%E7%9A%84mean-square-error.html"><![CDATA[<h1 id="写在前面">写在前面</h1>

<p>最近需要</p>]]></content><author><name>zorchp</name></author><summary type="html"><![CDATA[写在前面 最近需要]]></summary></entry><entry><title type="html">Github pages博客 搭建与配置</title><link href="/2021/03/25/GitHub-Pages%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE.html" rel="alternate" type="text/html" title="Github pages博客 搭建与配置" /><published>2021-03-25T00:00:00+08:00</published><updated>2021-03-25T00:00:00+08:00</updated><id>/2021/03/25/GitHub%20Pages%E5%8D%9A%E5%AE%A2--%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE</id><content type="html" xml:base="/2021/03/25/GitHub-Pages%E5%8D%9A%E5%AE%A2-%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%85%8D%E7%BD%AE.html"><![CDATA[<h1 id="写在前面">写在前面</h1>

<p>最近想尝试一下GitHub提供的GitHub Pages功能,通过GitHub强大的服务器支持,可以免费搭建自己的个人站点(个人博客),看了很多博客和教程,特别是Jekyll的官方文档,终于摸索出来一套属于Mac的个人站点搭建方法.</p>

<p>我主要使用了Jekyll作为渲染静态页面的引擎,本来是想直接拷贝别人做好的,然后自己再进行修改,但是感觉这样还是学不到东西,所以还是自己亲自动手实现一下啦~</p>

<p>本文部分参考了阮一峰老师的博客<sup id="fnref:2" role="doc-noteref"><a href="#fn:2" class="footnote" rel="footnote">1</a></sup>以及Jekyll的step-by-step-tutorial文档<sup id="fnref:3" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">2</a></sup>,(不得不说Dash是真的不错,校园网时好时坏的情况下还是要靠离线文档挑大梁了).教程部分主要选取了jekyll的官方教程<sup id="fnref:3:1" role="doc-noteref"><a href="#fn:3" class="footnote" rel="footnote">2</a></sup>
,教程是英文的,不过写的很详细,想深入学习的话还得看官方文档.</p>

<h1 id="前期准备">前期准备</h1>

<h2 id="github">GitHub</h2>

<p>首先你需要有一个GitHub账号,并且创建一个名为<code class="language-plaintext highlighter-rouge">&lt;username&gt;.github.io</code>的仓库,这样可以通过直接在浏览器中访问<code class="language-plaintext highlighter-rouge">&lt;username&gt;.github.io</code>来进入自己的站点;</p>

<p>创建这个仓库之后,就可以clone到本地,然后进行自己的更改了;</p>

<p>接下来是Jekyll的配置.</p>

<h2 id="jekyll">Jekyll</h2>

<p>一开始我以为直接使用Mac自带的ruby环境就可以下载Jekyll和bundler了,但是一番操作之后发现并不行…无奈对ruby不是很了解,走了弯路,之后我发现在Jekyll的官方安装文档<sup id="fnref:1" role="doc-noteref"><a href="#fn:1" class="footnote" rel="footnote">3</a></sup>
中有关于macOS如何安装Jekyll的介绍,很快就完成了Jekyll及其依赖的安装.</p>

<p>首先你需要安装命令行开发工具(终端输入<code class="language-plaintext highlighter-rouge">xcode-select --install</code>)
,完成之后下载本地编译版brew,这个我在之前已经写过一篇文章,大家可以参考一下<a href="https://blog.csdn.net/qq_41437512/article/details/112435816">《m1 MBA配置Homebrew环境+国内源配置》</a>,然后输入:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>brew <span class="nb">install </span>ruby
<span class="c"># 添加ruby路径到环境变量</span>
<span class="nb">echo</span> <span class="s1">'export PATH="/opt/homebrew/opt/ruby/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.zshrc
<span class="nb">source</span> ~/.zshrc
</code></pre></div></div>

<p>然后在终端查看ruby安装位置与版本信息:</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>which ruby 
ruby <span class="nt">-v</span>
</code></pre></div></div>

<p>使用ruby的包管理器<code class="language-plaintext highlighter-rouge">gem</code>安装Jekyll及bundle(这一步如果速度慢的话可以添加ruby的国内源镜像)</p>

<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 移除默认镜像</span>
<span class="nb">sudo </span>gem sources <span class="nt">--remove</span> https://rubygems.org/
<span class="c"># 添加国内镜像</span>
<span class="nb">sudo </span>gem sources <span class="nt">-a</span> http://gems.ruby-china.com/
<span class="c"># 查看镜像列表</span>
gem sources <span class="nt">-l</span>
<span class="c"># 安装bundler和jekyll</span>
<span class="nb">sudo </span>gem <span class="nb">install</span> <span class="nt">--user-install</span> bundler jekyll
<span class="c"># 安装缺失的包(也可以视情况安装,看看后面会不会因为这个包而报错)</span>
<span class="nb">sudo </span>gem <span class="nb">install </span>webrick
<span class="c"># 将gem安装的包路径添加到环境变量</span>
<span class="nb">echo</span> <span class="s1">'export PATH="$HOME/.gem/ruby/3.0.0/bin:$PATH"'</span> <span class="o">&gt;&gt;</span> ~/.zshrc
<span class="nb">source</span> ~/.zshrc
</code></pre></div></div>

<p>最后可以通过<code class="language-plaintext highlighter-rouge">gem env</code>检查路径是否正确(正确的话会在路径中显示安装gem包的家目录)</p>

<h1 id="搭建个人站点博客">搭建个人站点(博客)</h1>

<p>完成上述的几个步骤后,就可以创建自己的个人站点了,这里需要先创建几个文件(文件夹)如下:</p>

<ol>
  <li><code class="language-plaintext highlighter-rouge">_config.yml</code>: 配置文件(yaml)</li>
  <li><code class="language-plaintext highlighter-rouge">_layouts/default.html</code>: 网页模板文件(html)</li>
  <li><code class="language-plaintext highlighter-rouge">_posts/2021-03-23-blog1.md</code>: 你的博客文章就放在这里(可以用HTML,也可以用Markdown)</li>
  <li><code class="language-plaintext highlighter-rouge">index.md</code>: Blog的Markdown主页</li>
</ol>

<p>这几个文件夹中的内容已经足够渲染出一个包含基本内容的博客了,但是如果想实现更为复杂的功能就还需要新建一些配置文件/文件夹,后面我们会说到.</p>

<h1 id="基本的四个文件">基本的四个文件</h1>

<h2 id="1-_configyml配置文件">1. _config.yml配置文件</h2>

<p>该文件用来<strong>配置网页的标题等信息</strong>,第一行设置根目录位置,第二行选择Markdown为博客编辑语言,之后是标题和描述信息.</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="na">baseurl</span><span class="pi">:</span> <span class="s">/</span>
<span class="na">markdown</span><span class="pi">:</span> <span class="s">kramdown</span>

<span class="na">title</span><span class="pi">:</span> <span class="s">My Homepage</span>
<span class="na">description</span><span class="pi">:</span> <span class="s">share some useful skills and tips</span>
</code></pre></div></div>

<h2 id="2-_layoutsdefaulthtml网页模板文件">2. _layouts/default.html网页模板文件</h2>

<p>单下划线+layouts作为文件目录,里面的html文件都是你的博客的模板,<code class="language-plaintext highlighter-rouge">default</code>是一个所有页面都要遵循的主模板,这个模板主体使用的是HTML标记语言,双大括号或者大括号内包含百分号这样的表达式是一种名叫Liquid的模板语言.</p>

<p>除了default模板,你还可以创建<code class="language-plaintext highlighter-rouge">post.html</code>文件作为<code class="language-plaintext highlighter-rouge">_posts</code>文件夹内博客文章的模板,只需要在文档的开头使用三个短线包裹的部分中加入yaml配置即可,如下是基本的<code class="language-plaintext highlighter-rouge">default.html</code>文件:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"utf-8"</span><span class="nt">&gt;</span>

    <span class="nt">&lt;title&gt;</span>{{ page.title }}<span class="nt">&lt;/title&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>
{{ content }}

<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<p>下面是博客内容的模板文件<code class="language-plaintext highlighter-rouge">post.html</code>, 这里先在文件头部指定了布局为<code class="language-plaintext highlighter-rouge">default</code>, 相当于一种对default的继承, 下面实现了显示文章的标题,日期以及作者的功能,最后面的<code class="language-plaintext highlighter-rouge"> {{ content }}</code>是内容(
正文)部分.</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: default
---

<span class="nt">&lt;h1&gt;</span>Github pages博客  搭建与配置<span class="nt">&lt;/h1&gt;</span>
<span class="nt">&lt;p&gt;</span>
     {{ page.date | date_to_string }} -  {{ page.author }}
<span class="nt">&lt;/p&gt;</span>

 {{ content }}
</code></pre></div></div>

<h2 id="3-_posts20210323-blog1md博客文章">3. _posts/2021/03/23-blog1.md博客文章</h2>

<p>这个就是博客的主文件了,只需要声明布局及作者(可选)就可以:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="na">post author</span><span class="pi">:</span> <span class="s">xxx</span>
<span class="nn">---</span>

<span class="gu">## 写在前面</span>

这是我的第一个个人博客
</code></pre></div></div>

<h2 id="4-indexmd网页主页">4. index.md网页主页</h2>

<p>这里是一个你网站的主页,也就是<code class="language-plaintext highlighter-rouge">xxx.github.io</code>这个网站打开时显示的默认页面,这里我采用了Markdown语言,大家也可以采用可定制性更高的html.<code class="language-plaintext highlighter-rouge">{{site.title}}</code>
会输出当前的页面标题.</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="na">default title</span><span class="pi">:</span> <span class="s">欢迎来到我的博客</span>

<span class="nn">---</span>
{{ site.title }}

</code></pre></div></div>

<h1 id="用来扩展的其他文件">用来扩展的其他文件</h1>

<p>除了上面的四个基本文件,想要实现更为复杂的页面样式的话,还需要添加一些其他的文件,如图片\CSS样式等,这就需要一些其他的文件来配置了.</p>

<h2 id="css样式">CSS样式</h2>

<p>首先来看看CSS样式如何在你的网站中实现,一般来说网站的建设要遵循样式与内容分离的,所以最好将你的CSS样式独立出来,便于之后的维护.</p>

<p>需要新建两个文件:</p>

<h3 id="_sassmainscss文件"><code class="language-plaintext highlighter-rouge">_sass/main.scss</code>文件</h3>

<p>保存css样式,例如可以添加如下内容:</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nc">.current</span> <span class="p">{</span>
    <span class="nl">color</span><span class="p">:</span> <span class="no">green</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

<h3 id="assetscssstylesscss文件"><code class="language-plaintext highlighter-rouge">/assets/css/styles.scss</code>文件</h3>

<p>用于指出css文件存放的位置,其内容为</p>

<div class="language-css highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">---</span>
<span class="nt">---</span>

<span class="k">@import</span> <span class="s1">"/_sass/main.scss"</span><span class="p">;</span>
</code></pre></div></div>

<p>这里的yaml头是必要的,用来声明jekyll引擎要处理的文档,下面的语句代表导入上面的<code class="language-plaintext highlighter-rouge">main.scss</code>样式文件.</p>

<p>然后我们还需要将CSS的路径添加到default.html模板文件中,这样才可以正确导入CSS,即在default.html文件中的<code class="language-plaintext highlighter-rouge">&lt;head&gt;&lt;/head&gt;</code>标签中加入:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c">&lt;!-- 添加CSS路径到当前文件 --&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"/assets/css/styles.css"</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h2 id="设置博客列表及关于页面">设置博客列表及关于页面</h2>

<p>有了主页还不够,还需要加上能够显示所有博客的一个列表,在站点根目录下新建一个<code class="language-plaintext highlighter-rouge">blog.html</code>文件,输入以下内容:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
layout: default
title: Blog
---

<span class="nt">&lt;h1&gt;</span>最新文章<span class="nt">&lt;/h1&gt;</span>

<span class="c">&lt;!-- 链接到全部博客(for循环遍历) --&gt;</span>
<span class="nt">&lt;ul&gt;</span>
    
    {% for post in site.posts  %}
    <span class="nt">&lt;li&gt;</span>
        <span class="nt">&lt;h3&gt;</span> {{ post.date | date_to_string }}
            <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">" {{ post.url }}"</span><span class="nt">&gt;</span> {{ post.title }}<span class="nt">&lt;/a&gt;&lt;/h3&gt;</span>
        <span class="c">&lt;!-- 默认内容的第一段 --&gt;</span>
        <span class="c">&lt;!--  {{ post.excerpt }} --&gt;</span>
    <span class="nt">&lt;/li&gt;</span>
    {% endfor %}
<span class="nt">&lt;/ul&gt;</span>
</code></pre></div></div>

<p>这里使用Liquid的for循环遍历_posts目录下的所有文章并输出标题及文章的默认第一段(相当于预览).</p>

<p>之后是一个about页面,同样在根目录下新建文件<code class="language-plaintext highlighter-rouge">about.md</code>,这里可以放上你的个人介绍等内容,内容如下:</p>

<div class="language-markdown highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nn">---</span>
<span class="na">layout</span><span class="pi">:</span> <span class="na">default title</span><span class="pi">:</span> <span class="s">About</span>
<span class="nn">---</span>

<span class="gh"># About page</span>

This page tells you a little bit about me.
</code></pre></div></div>

<h2 id="导航栏">导航栏</h2>

<p>一般的HTML都需要一个导航栏来实现页面之间的跳转,HTML就实现了这一基本功能,这时候需要在网站的根目录下新建<code class="language-plaintext highlighter-rouge">/_includes/navigation.html</code>文件,文件的内容为:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">&lt;!-- 设置导航栏,并使当前网页高亮显示 --&gt;</span>
<span class="nt">&lt;nav&gt;</span>
     {% for item in site.data.navigation %}
    <span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ item.link }}"</span> <span class="err">{%</span> <span class="na">if</span> <span class="na">page.url=</span><span class="s">=</span> <span class="na">item.link</span> <span class="err">%}{%</span> <span class="na">endif</span> <span class="err">%}</span><span class="nt">&gt;</span>
         {{ item.name }}
    <span class="nt">&lt;/a&gt;</span>
    {% endfor %}
<span class="nt">&lt;/nav&gt;</span>
</code></pre></div></div>

<p>这里使用Liquid设置了一个for循环,用来遍历主页/博客页面及关于页面.</p>

<p>要实现正常的链接跳转,还需要新建一个配置文件<code class="language-plaintext highlighter-rouge">_data/navigation.yml</code>,即yml文件,用来告诉导航栏要显示的内容以及超链接:</p>

<div class="language-yaml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Home</span>
  <span class="na">link</span><span class="pi">:</span> <span class="s">/</span>
<span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">Blog</span>
  <span class="na">link</span><span class="pi">:</span> <span class="s">/blog.html</span>
<span class="pi">-</span> <span class="na">name</span><span class="pi">:</span> <span class="s">About</span>
  <span class="na">link</span><span class="pi">:</span> <span class="s">/about.html</span>
</code></pre></div></div>

<p>同时,在这里就可以应用我们之前提到的CSS样式文件了,在navigation.html文件的第四行加入<code class="language-plaintext highlighter-rouge">class="current"</code>,即我们之前设置的current节点的样式,如下:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nt">&lt;a</span> <span class="na">href=</span><span class="s">"{{ item.link }}"</span> <span class="err">{%</span> <span class="na">if</span> <span class="na">page.url=</span><span class="s">=</span> <span class="na">item.link</span> <span class="err">%}</span><span class="na">class=</span><span class="s">"current"</span> <span class="err">{%</span> <span class="na">endif</span> <span class="err">%}</span><span class="nt">&gt;</span>
</code></pre></div></div>

<h2 id="点缀添加主页及标签页的图标">点缀:添加主页及标签页的图标</h2>

<p>一般在浏览器中,打开的标签页左边都会有个小图标,我们的网站也可以实现这个功能,只需要将制作好的ico图标文件放在<code class="language-plaintext highlighter-rouge">assets/images/favicon.ico</code>
即可,jekyll就会找到图标的位置,然后在default.html的<code class="language-plaintext highlighter-rouge">&lt;head&gt;&lt;/head&gt;</code>中加入:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  <span class="c">&lt;!-- 下面两行用于生成主页标签页以及子网页标签页上面的小图标 --&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"shortcut icon"</span> <span class="na">href=</span><span class="s">"/assets/images/favicon.ico"</span> <span class="na">type=</span><span class="s">"image/x-icon"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"bookmark"</span> <span class="na">href=</span><span class="s">"/assets/images/favicon.ico"</span><span class="nt">/&gt;</span>
</code></pre></div></div>

<p>就可以正确显示标签页图标了.</p>

<p>最后的default.html文件如下:</p>

<div class="language-html highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;!DOCTYPE html&gt;</span>
<span class="nt">&lt;html&gt;</span>
<span class="nt">&lt;head&gt;</span>
    <span class="nt">&lt;meta</span> <span class="na">charset=</span><span class="s">"utf-8"</span><span class="nt">&gt;</span>
    <span class="c">&lt;!-- 添加CSS路径到当前文件 --&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"stylesheet"</span> <span class="na">href=</span><span class="s">"/assets/css/styles.css"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;title&gt;</span>{{ page.title }}<span class="nt">&lt;/title&gt;</span>

    <span class="c">&lt;!-- 下面两行用于生成主页标签页以及子网页标签页上面的小图标 --&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"shortcut icon"</span> <span class="na">href=</span><span class="s">"/assets/images/favicon.ico"</span> <span class="na">type=</span><span class="s">"image/x-icon"</span><span class="nt">/&gt;</span>
    <span class="nt">&lt;link</span> <span class="na">rel=</span><span class="s">"bookmark"</span> <span class="na">href=</span><span class="s">"/assets/images/favicon.ico"</span><span class="nt">/&gt;</span>
<span class="nt">&lt;/head&gt;</span>
<span class="nt">&lt;body&gt;</span>

<span class="c">&lt;!-- 设置导航栏 --&gt;</span>
{% include navigation.html %}

{{ content }}
<span class="nt">&lt;/body&gt;</span>
<span class="nt">&lt;/html&gt;</span>
</code></pre></div></div>

<h1 id="文件树目录">文件树目录</h1>

<p>这里是最后的文件树目录,还是挺复杂的..</p>

<p>注意这里是没有启动过<code class="language-plaintext highlighter-rouge">Jekyll server</code>服务的,开启之后还会生成一些文件夹,如<code class="language-plaintext highlighter-rouge">_site</code>文件夹(jekyll引擎生成的站点文件都在这里)和<code class="language-plaintext highlighter-rouge">.jekyll_cache</code>文件夹(缓存文件).</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>.
├── README.md
├── _config.yml
├── _data
│   └── navigation.yml
├── _includes
│   └── navigation.html
├── _layouts
│   ├── default.html
│   └── post.html
├── _posts
│   ├── 2021-03-25-blog1.md
│   └── 2021-03-26-blog2.md
├── _sass
│   └── main.scss
├── about.md
├── assets
│   ├── css
│   │   └── styles.scss
│   └── images
│       └── favicon.ico
├── blog.html
└── index.md
</code></pre></div></div>

<h1 id="jekyll本地服务部署">Jekyll本地服务部署</h1>

<p>有两种生成静态网页的方式:</p>

<p><code class="language-plaintext highlighter-rouge">cd</code>到当前目录(即<code class="language-plaintext highlighter-rouge">&lt;username&gt;.github.io</code>),可以采用<code class="language-plaintext highlighter-rouge">jekyll build</code>构建静态网页或者<code class="language-plaintext highlighter-rouge">jekyll server</code>启动服务,这里还是建议直接用<code class="language-plaintext highlighter-rouge">server</code>
,开启服务,然后就可以在浏览器输入<code class="language-plaintext highlighter-rouge">http://localhost:4000</code>进入你的静态网页了.</p>

<p>使用<code class="language-plaintext highlighter-rouge">control+C</code>即可关闭服务,在Jekyll的官方文档中提到: <strong>如果修改了config.yml配置或其他yml文件的配置</strong>,那就需要<code class="language-plaintext highlighter-rouge">control+C</code>中止服务并重启服务来刷新配置.</p>

<h1 id="最后成果与小结">最后成果与小结</h1>

<p>还是单调了点,之后慢慢学前端的知识再丰富自己的网站吧.</p>

<p>最后附上我的GitHub Pages Blog:<a href="https://apocaly-pse.github.io">apocaly-pse.github.io</a>.</p>

<h1 id="参考">参考</h1>

<div class="footnotes" role="doc-endnotes">
  <ol>
    <li id="fn:2" role="doc-endnote">
      <p><a href="http://www.ruanyifeng.com/blog/2012/08/blogging_with_jekyll.html">搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门 - 阮一峰的网络日志</a>; <a href="#fnref:2" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
    <li id="fn:3" role="doc-endnote">
      <p><a href="https://jekyllrb.com/docs/step-by-step/01-setup/">Jekyll Step by Step Tutorial</a>; <a href="#fnref:3" class="reversefootnote" role="doc-backlink">&#8617;</a> <a href="#fnref:3:1" class="reversefootnote" role="doc-backlink">&#8617;<sup>2</sup></a></p>
    </li>
    <li id="fn:1" role="doc-endnote">
      <p><a href="https://jekyllrb.com/docs/installation/macos/">Jekyll on macOS</a>; <a href="#fnref:1" class="reversefootnote" role="doc-backlink">&#8617;</a></p>
    </li>
  </ol>
</div>]]></content><author><name>zorchp</name></author><summary type="html"><![CDATA[写在前面 最近想尝试一下GitHub提供的GitHub Pages功能,通过GitHub强大的服务器支持,可以免费搭建自己的个人站点(个人博客),看了很多博客和教程,特别是Jekyll的官方文档,终于摸索出来一套属于Mac的个人站点搭建方法. 我主要使用了Jekyll作为渲染静态页面的引擎,本来是想直接拷贝别人做好的,然后自己再进行修改,但是感觉这样还是学不到东西,所以还是自己亲自动手实现一下啦~ 本文部分参考了阮一峰老师的博客1以及Jekyll的step-by-step-tutorial文档2,(不得不说Dash是真的不错,校园网时好时坏的情况下还是要靠离线文档挑大梁了).教程部分主要选取了jekyll的官方教程2 ,教程是英文的,不过写的很详细,想深入学习的话还得看官方文档. 前期准备 GitHub 首先你需要有一个GitHub账号,并且创建一个名为&lt;username&gt;.github.io的仓库,这样可以通过直接在浏览器中访问&lt;username&gt;.github.io来进入自己的站点; 创建这个仓库之后,就可以clone到本地,然后进行自己的更改了; 接下来是Jekyll的配置. Jekyll 一开始我以为直接使用Mac自带的ruby环境就可以下载Jekyll和bundler了,但是一番操作之后发现并不行…无奈对ruby不是很了解,走了弯路,之后我发现在Jekyll的官方安装文档3 中有关于macOS如何安装Jekyll的介绍,很快就完成了Jekyll及其依赖的安装. 首先你需要安装命令行开发工具(终端输入xcode-select --install) ,完成之后下载本地编译版brew,这个我在之前已经写过一篇文章,大家可以参考一下《m1 MBA配置Homebrew环境+国内源配置》,然后输入: brew install ruby # 添加ruby路径到环境变量 echo 'export PATH="/opt/homebrew/opt/ruby/bin:$PATH"' &gt;&gt; ~/.zshrc source ~/.zshrc 然后在终端查看ruby安装位置与版本信息: which ruby ruby -v 使用ruby的包管理器gem安装Jekyll及bundle(这一步如果速度慢的话可以添加ruby的国内源镜像) # 移除默认镜像 sudo gem sources --remove https://rubygems.org/ # 添加国内镜像 sudo gem sources -a http://gems.ruby-china.com/ # 查看镜像列表 gem sources -l # 安装bundler和jekyll sudo gem install --user-install bundler jekyll # 安装缺失的包(也可以视情况安装,看看后面会不会因为这个包而报错) sudo gem install webrick # 将gem安装的包路径添加到环境变量 echo 'export PATH="$HOME/.gem/ruby/3.0.0/bin:$PATH"' &gt;&gt; ~/.zshrc source ~/.zshrc 最后可以通过gem env检查路径是否正确(正确的话会在路径中显示安装gem包的家目录) 搭建个人站点(博客) 完成上述的几个步骤后,就可以创建自己的个人站点了,这里需要先创建几个文件(文件夹)如下: _config.yml: 配置文件(yaml) _layouts/default.html: 网页模板文件(html) _posts/2021-03-23-blog1.md: 你的博客文章就放在这里(可以用HTML,也可以用Markdown) index.md: Blog的Markdown主页 这几个文件夹中的内容已经足够渲染出一个包含基本内容的博客了,但是如果想实现更为复杂的功能就还需要新建一些配置文件/文件夹,后面我们会说到. 基本的四个文件 1. _config.yml配置文件 该文件用来配置网页的标题等信息,第一行设置根目录位置,第二行选择Markdown为博客编辑语言,之后是标题和描述信息. baseurl: / markdown: kramdown title: My Homepage description: share some useful skills and tips 2. _layouts/default.html网页模板文件 单下划线+layouts作为文件目录,里面的html文件都是你的博客的模板,default是一个所有页面都要遵循的主模板,这个模板主体使用的是HTML标记语言,双大括号或者大括号内包含百分号这样的表达式是一种名叫Liquid的模板语言. 除了default模板,你还可以创建post.html文件作为_posts文件夹内博客文章的模板,只需要在文档的开头使用三个短线包裹的部分中加入yaml配置即可,如下是基本的default.html文件: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;title&gt;{{ page.title }}&lt;/title&gt; &lt;/head&gt; &lt;body&gt; {{ content }} &lt;/body&gt; &lt;/html&gt; 下面是博客内容的模板文件post.html, 这里先在文件头部指定了布局为default, 相当于一种对default的继承, 下面实现了显示文章的标题,日期以及作者的功能,最后面的 {{ content }}是内容( 正文)部分. --- layout: default --- &lt;h1&gt;Github pages博客 搭建与配置&lt;/h1&gt; &lt;p&gt; {{ page.date | date_to_string }} - {{ page.author }} &lt;/p&gt; {{ content }} 3. _posts/2021/03/23-blog1.md博客文章 这个就是博客的主文件了,只需要声明布局及作者(可选)就可以: --- layout: post author: xxx --- ## 写在前面 这是我的第一个个人博客 4. index.md网页主页 这里是一个你网站的主页,也就是xxx.github.io这个网站打开时显示的默认页面,这里我采用了Markdown语言,大家也可以采用可定制性更高的html.{{site.title}} 会输出当前的页面标题. --- layout: default title: 欢迎来到我的博客 --- {{ site.title }} 用来扩展的其他文件 除了上面的四个基本文件,想要实现更为复杂的页面样式的话,还需要添加一些其他的文件,如图片\CSS样式等,这就需要一些其他的文件来配置了. CSS样式 首先来看看CSS样式如何在你的网站中实现,一般来说网站的建设要遵循样式与内容分离的,所以最好将你的CSS样式独立出来,便于之后的维护. 需要新建两个文件: _sass/main.scss文件 保存css样式,例如可以添加如下内容: .current { color: green; } /assets/css/styles.scss文件 用于指出css文件存放的位置,其内容为 --- --- @import "/_sass/main.scss"; 这里的yaml头是必要的,用来声明jekyll引擎要处理的文档,下面的语句代表导入上面的main.scss样式文件. 然后我们还需要将CSS的路径添加到default.html模板文件中,这样才可以正确导入CSS,即在default.html文件中的&lt;head&gt;&lt;/head&gt;标签中加入: &lt;!-- 添加CSS路径到当前文件 --&gt; &lt;link rel="stylesheet" href="/assets/css/styles.css"&gt; 设置博客列表及关于页面 有了主页还不够,还需要加上能够显示所有博客的一个列表,在站点根目录下新建一个blog.html文件,输入以下内容: --- layout: default title: Blog --- &lt;h1&gt;最新文章&lt;/h1&gt; &lt;!-- 链接到全部博客(for循环遍历) --&gt; &lt;ul&gt; {% for post in site.posts %} &lt;li&gt; &lt;h3&gt; {{ post.date | date_to_string }} &lt;a href=" {{ post.url }}"&gt; {{ post.title }}&lt;/a&gt;&lt;/h3&gt; &lt;!-- 默认内容的第一段 --&gt; &lt;!-- {{ post.excerpt }} --&gt; &lt;/li&gt; {% endfor %} &lt;/ul&gt; 这里使用Liquid的for循环遍历_posts目录下的所有文章并输出标题及文章的默认第一段(相当于预览). 之后是一个about页面,同样在根目录下新建文件about.md,这里可以放上你的个人介绍等内容,内容如下: --- layout: default title: About --- # About page This page tells you a little bit about me. 导航栏 一般的HTML都需要一个导航栏来实现页面之间的跳转,HTML就实现了这一基本功能,这时候需要在网站的根目录下新建/_includes/navigation.html文件,文件的内容为: &lt;!-- 设置导航栏,并使当前网页高亮显示 --&gt; &lt;nav&gt; {% for item in site.data.navigation %} &lt;a href="{{ item.link }}" {% if page.url== item.link %}{% endif %}&gt; {{ item.name }} &lt;/a&gt; {% endfor %} &lt;/nav&gt; 这里使用Liquid设置了一个for循环,用来遍历主页/博客页面及关于页面. 要实现正常的链接跳转,还需要新建一个配置文件_data/navigation.yml,即yml文件,用来告诉导航栏要显示的内容以及超链接: - name: Home link: / - name: Blog link: /blog.html - name: About link: /about.html 同时,在这里就可以应用我们之前提到的CSS样式文件了,在navigation.html文件的第四行加入class="current",即我们之前设置的current节点的样式,如下: &lt;a href="{{ item.link }}" {% if page.url== item.link %}class="current" {% endif %}&gt; 点缀:添加主页及标签页的图标 一般在浏览器中,打开的标签页左边都会有个小图标,我们的网站也可以实现这个功能,只需要将制作好的ico图标文件放在assets/images/favicon.ico 即可,jekyll就会找到图标的位置,然后在default.html的&lt;head&gt;&lt;/head&gt;中加入: &lt;!-- 下面两行用于生成主页标签页以及子网页标签页上面的小图标 --&gt; &lt;link rel="shortcut icon" href="/assets/images/favicon.ico" type="image/x-icon"/&gt; &lt;link rel="bookmark" href="/assets/images/favicon.ico"/&gt; 就可以正确显示标签页图标了. 最后的default.html文件如下: &lt;!DOCTYPE html&gt; &lt;html&gt; &lt;head&gt; &lt;meta charset="utf-8"&gt; &lt;!-- 添加CSS路径到当前文件 --&gt; &lt;link rel="stylesheet" href="/assets/css/styles.css"&gt; &lt;title&gt;{{ page.title }}&lt;/title&gt; &lt;!-- 下面两行用于生成主页标签页以及子网页标签页上面的小图标 --&gt; &lt;link rel="shortcut icon" href="/assets/images/favicon.ico" type="image/x-icon"/&gt; &lt;link rel="bookmark" href="/assets/images/favicon.ico"/&gt; &lt;/head&gt; &lt;body&gt; &lt;!-- 设置导航栏 --&gt; {% include navigation.html %} {{ content }} &lt;/body&gt; &lt;/html&gt; 文件树目录 这里是最后的文件树目录,还是挺复杂的.. 注意这里是没有启动过Jekyll server服务的,开启之后还会生成一些文件夹,如_site文件夹(jekyll引擎生成的站点文件都在这里)和.jekyll_cache文件夹(缓存文件). . ├── README.md ├── _config.yml ├── _data │   └── navigation.yml ├── _includes │   └── navigation.html ├── _layouts │   ├── default.html │   └── post.html ├── _posts │   ├── 2021-03-25-blog1.md │   └── 2021-03-26-blog2.md ├── _sass │   └── main.scss ├── about.md ├── assets │   ├── css │   │   └── styles.scss │   └── images │   └── favicon.ico ├── blog.html └── index.md Jekyll本地服务部署 有两种生成静态网页的方式: cd到当前目录(即&lt;username&gt;.github.io),可以采用jekyll build构建静态网页或者jekyll server启动服务,这里还是建议直接用server ,开启服务,然后就可以在浏览器输入http://localhost:4000进入你的静态网页了. 使用control+C即可关闭服务,在Jekyll的官方文档中提到: 如果修改了config.yml配置或其他yml文件的配置,那就需要control+C中止服务并重启服务来刷新配置. 最后成果与小结 还是单调了点,之后慢慢学前端的知识再丰富自己的网站吧. 最后附上我的GitHub Pages Blog:apocaly-pse.github.io. 参考 搭建一个免费的，无限流量的Blog—-github Pages和Jekyll入门 - 阮一峰的网络日志; &#8617; Jekyll Step by Step Tutorial; &#8617; &#8617;2 Jekyll on macOS; &#8617;]]></summary></entry></feed>